# ===================================================================
# SERVER CONFIGURATION
# ===================================================================
server.port=8080
server.servlet.context-path=/user-service

# ===================================================================
# POSTGRESQL DATABASE CONFIGURATION
# Gunakan Environment Variables untuk nilai sensitif
# ===================================================================
spring.datasource.url=jdbc:postgresql://localhost:5432/aromanusantara_user
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# ===================================================================
# JPA/HIBERNATE CONFIGURATION FOR PRODUCTION
# ===================================================================
# 'validate' akan memeriksa apakah skema database sesuai dengan entitas JPA.
# Ini lebih aman daripada 'update' atau 'create-drop' di produksi.
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.format-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ===================================================================
# H2 CONSOLE (DISABLED ON PRODUCTION)
# ===================================================================
spring.h2.console.enabled=false

# ===================================================================
# JWT CONFIGURATION (BEST PRACTICE: USE ENVIRONMENT VARIABLES)
# ===================================================================
# Ambil secret dari environment variable untuk keamanan
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

# ===================================================================
# LOGGING CONFIGURATION FOR PRODUCTION
# ===================================================================
logging.level.root=INFO
logging.level.com.harumnusantara.user=INFO
logging.level.org.springframework.security=INFO